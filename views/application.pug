doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(content="width=device-width, initial-scale=1.0" name="viewport")
    title Credit Card/Loan Application
    style.
      body {
        font-family: Arial, sans-serif;
        max-width: 600px;
        margin: 0 auto;
        padding: 20px;
        background-color: #f5f5f5;
      }
      
      .form-container {
        background-color: white;
        padding: 2rem;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
      }

      h1 {
        color: #333;
        text-align: center;
      }

      .form-group {
        margin-bottom: 1.5rem;
      }

      label {
        display: block;
        margin-bottom: 0.5rem;
        font-weight: bold;
        color: #555;
      }

      input, select {
        width: 100%;
        padding: 8px;
        border: 1px solid #ddd;
        border-radius: 4px;
        box-sizing: border-box;
      }

      input:focus, select:focus {
        outline: none;
        border-color: #4CAF50;
        box-shadow: 0 0 5px rgba(76,175,80,0.2);
      }

      button {
        background-color: #1a237e;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        width: 100%;
        font-size: 16px;
      }

      button:hover {
        background-color: #151b60;
      }

      .button-group {
        display: flex;
        gap: 1rem;
        margin-top: 1rem;
      }

      .button-exit {
        background-color: #dc3545;
      }

      .button-exit:hover {
        background-color: #bb2d3b;
      }

      .error {
        color: #ff0000;
        font-size: 0.875rem;
        margin-top: 0.25rem;
      }

  body
    div.form-container
      h1(role="heading" aria-level="1") Credit Card/Loan Application
      form#applicationForm(
        method="POST" 
        action="/submit-application"
        novalidate
      )
        fieldset
          legend Application Details
          
          div.form-group
            label(for="type") Select Type:
            select#type(
              required
              name="type"
              aria-required="true"
            )
              option(value="") -- Please select an option --
              option(value="credit-card") Credit Card
              option(value="loan") Loan
            div.error(aria-live="polite")
          
          div.form-group
            label(for="accountId") Account Number:
            input#accountId(
              required
              name="accountId"
              type="text"
              pattern="[A-Z0-9]{8}"
              placeholder="Enter 8-digit Account Number"
              aria-required="true"
              title="Please enter 8 characters (numbers and uppercase letters only)"
            )
            div.error(aria-live="polite")
          
          div.form-group
            label(for="loanType") Loan Type:
            select#loanType(
              name="loanType"
              aria-required="false"
            )
              option(value="") -- Select if applying for loan --
              option(value="personal") Personal Loan
              option(value="auto") Auto Loan
              option(value="home") Home Loan
              option(value="business") Business Loan
            div.error(aria-live="polite")
          
          div.form-group
            label(for="income") Annual Income ($):
            input#income(
              required
              name="income"
              type="number"
              min="0"
              step="1000"
              placeholder="Enter your annual income"
              aria-required="true"
            )
            div.error(aria-live="polite")
          
          div.form-group
            label(for="creditScore") Credit Score:
            input#creditScore(
              required
              name="creditScore"
              type="number"
              min="300"
              max="850"
              placeholder="Enter score between 300-850"
              aria-required="true"
            )
            div.error(aria-live="polite")
         
          div.button-group
          button(type="submit" aria-label="Submit application") Submit
          button.button-exit(
            type="button" 
            aria-label="Exit application"
            onclick="exitApplication()"
          ) Exit

    script.
      document.getElementById('applicationForm').addEventListener('submit', function(e) {
        e.preventDefault();
        let isValid = true;
        const errors = document.getElementsByClassName('error');
        
        // Clear previous errors
        Array.from(errors).forEach(error => error.textContent = '');

        // Type validation
        const type = document.getElementById('type');
        if (!type.value) {
          type.nextElementSibling.textContent = 'Please select an application type';
          isValid = false;
        }

        // Account ID validation
        const accountId = document.getElementById('accountId');
        if (!accountId.value.match(/^[A-Z0-9]{8}$/)) {
          accountId.nextElementSibling.textContent = 'Account ID must be 8 characters (numbers only)';
          isValid = false;
        }

        // Income validation
        const income = document.getElementById('income');
        if (income.value < 0) {
          income.nextElementSibling.textContent = 'Income cannot be negative';
          isValid = false;
        }

        // Credit Score validation
        const creditScore = document.getElementById('creditScore');
        if (creditScore.value < 300 || creditScore.value > 850) {
          creditScore.nextElementSibling.textContent = 'Credit score must be between 300 and 850';
          isValid = false;
        }

        // Show loan type validation only if loan is selected
        if (type.value === 'loan' && !document.getElementById('loanType').value) {
          document.getElementById('loanType').nextElementSibling.textContent = 'Please select a loan type';
          isValid = false;
        }

        if (isValid) {
          this.submit();
        }
      });

      // Show/hide loan type based on application type
      document.getElementById('type').addEventListener('change', function() {
        const loanTypeGroup = document.getElementById('loanType').closest('.form-group');
        if (this.value === 'loan') {
          loanTypeGroup.style.display = 'block';
        } else {
          loanTypeGroup.style.display = 'none';
        }
      });

      function exitApplication() {
        // Check if user is logged in (you'll need to implement this check based on your authentication system)
        const isLoggedIn = checkUserLoginStatus(); // Replace with your actual login check

        if (isLoggedIn) {
            window.location.href = '/account'; // Replace with your account page URL
        } else {
            window.location.href = '/'; // Replace with your home page URL
        }
      }

      // Example function - replace with your actual login check implementation
      function checkUserLoginStatus() {
        // This is a placeholder - implement your actual login check here
        // For example, you might check a session token or localStorage
        return localStorage.getItem('userToken') !== null;
      }

//- Adam Nielsen and Fransisco Cruz